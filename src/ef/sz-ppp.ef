引入 用户界面, 工具;
/*################################
#    Oukan OKYH Systm Set Tools
#       sjchnkan @ 2004-2008
#          www.oukan,1m.cn
################################
依赖：
lib-okyh.ef
*/

类 SZ_ADSL<基类型 = 对话框> 
{
	初始化(){}
	//从这行开始是ADSL配置的界面，使用了用户界面、工具、配置等三个EF本地库。

	面板 HDMB2;
	编辑框 TSXX;
	编辑框 SR_FWM;
	编辑框 SR_MING;
	编辑框 SR_MIMA;
	编辑框 SR_DNS;
	编辑框 SR_DNS2;
	列表框 LB_ETH;
	列表框 LIEBIAO; 
	按钮 BCADSL;
	文本 路径="/etc/sysconfig/network-scripts/ifcfg-";
	文本 PZLJ="/etc/sysconfig/network-scripts/";
	文本 LS_SHEBEI;
	文本 SR_ETH;

	公开 初始化(容器控件 父窗口<可为空> = 空)
	{
		本对象.创建窗口(父窗口);
	}

	私有 创建窗口(容器控件 父窗口<可为空> = 空)//调用本对话框时必须带参数，例如：“创建 SZ_ADSL(本对象 )”。
	{
		整数 风格 = 0;
		风格 |= 窗口风格.显示关闭按钮;
		风格 |= 窗口风格.显示标题栏;
		基类.创建(父窗口, "PPPOE设置", 50, 50, 320, 260, 风格,"SZ_ADSL");
		居中(方位.双向);
		显示(真);
	}

	私有 逻辑 创建窗口控件()
	{
		本对象.宽度 = 本对象.取尺寸().宽度 - 本对象.取客户区尺寸().宽度 + 350;
		本对象.高度 = 本对象.取尺寸().高度 - 本对象.取客户区尺寸().高度 + 250;
		HDMB2 = 创建 用户界面.面板();
		HDMB2.创建(本对象);

		面板 HDMB2 = 创建 面板();
		HDMB2.创建(本对象, 0, 0, 本对象.宽度(), 本对象.高度(), 0, "");
		标签 SM_LB = 创建 标签();
		SM_LB.创建(HDMB2, -1, "请选择ADSL设备：", 3, 3, 120, 22, 0, "");
		LIEBIAO = 创建 列表框();
		LIEBIAO.创建(HDMB2);
		LIEBIAO.名称 = "LIEBIAO";
		LIEBIAO.左边 = 3;
		LIEBIAO.顶边 = 30;
		LIEBIAO.宽度 = 120;
		LIEBIAO.高度 = 80;
		QSBLB();
		标签 SM_ETH = 创建 标签();
		SM_ETH.创建(HDMB2, -1, "请选择ADSL设备：", 3, 110, 120, 22, 0, "");
		文本[] XR_ETH = 系统.文本类.分割(WLSB_ETH(),"-",真);
		LB_ETH = 创建 列表框();
		LB_ETH.创建(HDMB2, -1,  3, 130, 120, 20, XR_ETH, 32, 空, "LB_ETH");
		标签 SM_MING = 创建 标签();
		SM_MING.创建(HDMB2, -1, "ADSL账号：", 130, 15, 70, 12, 0, "");
		SR_MING = 创建 编辑框();
		SR_MING.创建(HDMB2, -1, "", 200, 10, 120, 22, 0, 空, "SR_MING");
		标签 SM_MIMA = 创建 标签();
		SM_MIMA.创建(HDMB2, -1, "ADSL密码：", 130, 45, 70, 12, 0, "");
		SR_MIMA = 创建 编辑框();
		SR_MIMA.创建(HDMB2, -1, "", 200, 40, 120, 22, 2048, 空, "");
		标签 SM_DNS = 创建 标签();
		SM_DNS.创建(HDMB2, -1, "主DNS：", 130, 75, 70, 12, 0, "");
		SR_DNS = 创建 编辑框();
		SR_DNS.创建(HDMB2, -1, "", 200, 70, 120, 22, 0, 空, "");
		标签 SM_DNS2 = 创建 标签();
		SM_DNS2.创建(HDMB2, -1, "备用DNS：", 130, 105, 70, 12, 0, "");
		SR_DNS2 = 创建 编辑框();
		SR_DNS2.创建(HDMB2, -1, "", 200, 100, 120, 22, 0, 空, "");
		标签 SM_FWM = 创建 标签();
		SM_FWM.创建(HDMB2, -1, "服务名：", 130, 135, 70, 12, 0, "");
		SR_FWM = 创建 编辑框();
		SR_FWM.创建(HDMB2, -1, "", 200, 130, 120, 22, 0, 空, "");
		按钮 BCADSL = 创建 用户界面.按钮();
		BCADSL.创建(HDMB2, -1, "保存(&B)", 30, 185, 70, 32, 0, "BCADSL");
		按钮 BZAN = 创建 用户界面.按钮();
		BZAN.创建(HDMB2, -1, "帮助(&Z)", 125, 185, 70, 32, 0, "BZAN");
		按钮 GBAN = 创建 用户界面.按钮();
		GBAN.创建(HDMB2, -1, "关闭(&G)", 220, 185, 70, 32, 0, "GBAN");

		返回 真;
	}

	公开 逻辑 QSBLB()
	{
		LIEBIAO.清空();
		文本 PZLJ="/etc/sysconfig/network-scripts/";
		文本 文件名=用户界面.辅助类.取第一个文件(PZLJ,1);
		文本[]  文件 = 系统.文本类.分割(文件名,"-",真);
		文本 名=文件[文件.长度()-1];
		如果(名 == "");
		{
			名="ppp0";
		}
		整数 位置=0;
		LIEBIAO.插入(名,位置);
		文件名=用户界面.辅助类.取下一个文件();
		循环 (文件名 !="")
		{
			文本[]  文件 = 系统.文本类.分割(文件名,"-",真);
			文本 名=文件[文件.长度()-1];
			if(系统.文本类.左边(名,3) == "ppp")
			{
				if(名.长度() == 4)
				{
					位置++;
					LIEBIAO.插入(名,位置);
				}
			}
			文件名=用户界面.辅助类.取下一个文件();			 
		}
		LIEBIAO.设置焦点();

		返回 真;
	}
	public 文本 WLSB_ETH()
	{
		文本 文件名=用户界面.辅助类.取第一个文件(PZLJ,1);
		文本[]  SBWJ = 系统.文本类.分割(文件名,"-",真);
		文本 SB_ETH=SBWJ[SBWJ.长度()-1];
		如果(SB_ETH == "");
		{
			SB_ETH="eth0";
		}
		文件名=用户界面.辅助类.取下一个文件();
		循环 (文件名 !="")
		{
			文本[]  SBWJ = 系统.文本类.分割(文件名,"-",真);
			文本 LS_ETH=SBWJ[SBWJ.长度()-1];
			if(系统.文本类.左边(LS_ETH,3) == "eth")
			{
				if(SB_ETH.长度() == 4)
					SB_ETH=SB_ETH+"-"+LS_ETH;
			}
			文件名=用户界面.辅助类.取下一个文件();			 
		}

		返回 SB_ETH;
	}

	公开 事件处理 逻辑 删除_按钮被单击(按钮被单击 事件)
	{		
		如果(界面程序.信息框("是否确认删除该设备","警告",10,)!=16)
		{
			文本 文件名称=LIEBIAO.取项目文本(LIEBIAO.取选择项目());
			文本 文件路径=路径+文件名称;
			用户界面.辅助类.删除文件(文件路径);
			界面程序.信息框("删除文件成功","提示",);
		}
		返回(真);
	}

	公开 事件处理 逻辑 创建完毕(创建完毕事件 事件)
	{
		创建窗口控件();

		返回(真);
	}
	公开 事件处理 逻辑 LIEBIAO_鼠标左键被双击(鼠标左键被双击  事件)
	{
		文本 LS_SHEBEI=LIEBIAO.取项目文本(LIEBIAO.取选择项目());
		文本 LJ_PPP="/etc/sysconfig/network-scripts/ifcfg-";
		LB_ETH.设置焦点();
		SR_MING.文本(OKBasicLib.DPZ(LJ_PPP+LS_SHEBEI,"USER","AD"));
		SR_MIMA.文本(OKBasicLib.DPZ(LJ_PPP+LS_SHEBEI,"PASS",""));
		SR_DNS.文本(OKBasicLib.DPZ(LJ_PPP+LS_SHEBEI,"DNS1","server"));
		SR_DNS2.文本(OKBasicLib.DPZ(LJ_PPP+LS_SHEBEI,"DNS2","202.96.209.5"));
		SR_FWM.文本(OKBasicLib.DPZ(LJ_PPP+LS_SHEBEI,"FWM","AD"));


		返回(真);
	}
	公开 事件处理 逻辑 LB_ETH_鼠标左键被双击(鼠标左键被双击  事件)
	{
		文本 SR_ETH=LB_ETH.取项目文本(LB_ETH.取选择项目());
		返回(真);
	}

	公开 事件处理 逻辑 BCADSL_按钮被单击(按钮被单击 事件)
	{
		if(SR_ETH == "")
			SR_ETH="eth0";

		SH_NETWORK.ADSL("dlxx "+SR_MING.文本+" "+SR_MIMA.文本+" "+SR_DNS.文本+" "+SR_DNS2.文本+"  "+SR_ETH+" "+SR_FWM.文本);;
		界面程序.信息框("已保存",,);

		返回(真);
	}
	公开 事件处理 逻辑 GBAN_按钮被单击(按钮被单击 事件)
	{
		本对象.关闭(真);
		返回(真);
	}
	公开 事件处理 逻辑 BZAN_按钮被单击(按钮被单击 事件)
	{
		界面程序.信息框("部分DNS地址列表：\n上海\n202.101.6.2\n202.96.209.133\n61.152.82.18\n202.96.209.5\n网通\n202.106.0.20\n");
		返回(真);
	}

	公开 事件处理 逻辑 窗口被关闭(关闭事件 事件)
	{
		返回(真);
	}
}
